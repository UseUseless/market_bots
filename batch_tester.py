import osimport subprocessimport argparsedef run_batch_test(strategy_name: str, interval: str, data_dir: str = "data"):    """    Запускает бэктест указанной стратегии на всех файлах    в указанной директории данных.    """    print(f"--- Запуск пакетного тестирования для стратегии '{strategy_name}' ---")        interval_path = os.path.join(data_dir, interval)    if not os.path.isdir(interval_path):        print(f"Ошибка: Директория с данными не найдена: {interval_path}")        return    # Получаем список всех .parquet файлов в директории    data_files = [f for f in os.listdir(interval_path) if f.endswith('.parquet')]        if not data_files:        print(f"В директории {interval_path} не найдено файлов данных (.parquet).")        print("Убедитесь, что вы скачали данные с помощью download_data.py")        return    total_files = len(data_files)    print(f"Найдено {total_files} инструментов для тестирования.")    for i, filename in enumerate(data_files):        # Извлекаем FIGI из имени файла (убираем расширение .parquet)        figi = os.path.splitext(filename)[0]                print(f"\n({i+1}/{total_files}) Тестирование FIGI: {figi}...")                # Собираем команду для запуска run.py как списка аргументов        command = [            "python", "run.py",            "--mode", "backtest",            "--strategy", strategy_name,            "--source", "local",            "--figi", figi        ]                # Запускаем run.py как отдельный дочерний процесс и ждем его завершения        # Это гарантирует, что каждый запуск будет чистым и независимым        subprocess.run(command)    print("\n--- Пакетное тестирование завершено ---")if __name__ == "__main__":    parser = argparse.ArgumentParser(description="Менеджер пакетного тестирования стратегий.")        parser.add_argument("--strategy", type=str, required=True, help="Имя стратегии для тестирования (из реестра в run.py).")    parser.add_argument("--interval", type=str, required=True, help="Интервал данных (имя папки в директории /data).")        args = parser.parse_args()    run_batch_test(args.strategy, args.interval)```